from django.db import models
from datetime import datetime
# from annoying.fields import AutoOneToOneField
from register.models import User
# from django.db.models.signals import post_save
# from django.dispatch import receiver
# from django.db.models import DateField
# from datetime import date
# Create your models here.
import uuid
# from django.contrib.postgres.fields import JSONField


class Ticket(models.Model):
    # Relaciones
    user = models.ForeignKey(
        User, on_delete=models.CASCADE, related_name="ticketList", null=True, blank=False)

    # Atributos
    title = models.CharField(
        max_length=35, default=datetime.today().strftime('%d/%m/%Y')+'-'+uuid.uuid4().hex[:6].upper())
    empresa = models.CharField(max_length=20, default='Nombre de la empresa')

    address = models.CharField(max_length=50, default='')

    companyIdentifier = models.CharField(max_length=500, default='')

    identifier = models.CharField(unique=True,
                                  max_length=30, default='autogenerateduniqueid-custom')

    price = models.DecimalField(
        decimal_places=2, max_digits=10, default='00.00')

    momentOfCreation = models.DateTimeField(
        auto_now_add=datetime.now)

    data = models.TextField(blank=True, null=True)
    warranty = models.BooleanField(default=False)
    isCopy = models.BooleanField(default=False)

    class paymentMethod(models.TextChoices):
        ''' There are 3 payments types debit card, credit card and payment with money '''
        EFECTIVO = 'EF', ('Efectivo')
        TARJETA_DE_CREDITO = 'TC', ('Tarjeta de debito')
        TARJETA_DE_DEBITO = 'TD', ('Tarjeta de credito')

    payment = models.CharField(
        max_length=2,
        choices=paymentMethod.choices,
        default=paymentMethod.EFECTIVO,
    )

    def __str__(self):
        '''This definition returns the ticket title '''
        return self.title


# TODO MIRAR BIEN ESTO
class ScannedTicket(models.Model):
        # Relaciones
    user = models.ForeignKey(
        User, on_delete=models.CASCADE, related_name="scannedTicketList", null=True, blank=False)

    title = models.CharField(
        max_length=35, default=datetime.today().strftime('%d/%m/%Y'))

    empresa = models.CharField(max_length=20, default='Nombre de la empresa')

    photo = models.ImageField(upload_to='user_scannedTickets')

    def __str__(self):
        '''Returns the title of the ticket'''
        return self.title


class TicketLink(models.Model):

    ticket = models.ForeignKey(
        Ticket, on_delete=models.CASCADE, related_name="ticketLink", null=True, blank=False)

    url = models.CharField(max_length=150, blank=False, null=False)
    is_shared = models.BooleanField(default=False)
